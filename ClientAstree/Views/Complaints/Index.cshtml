@model IEnumerable<ClientAstree.Models.ComplaintVM>

@{
    ViewData["Title"] = "All Complaints";

    Func<string, string> GetStatusClass = status =>
    {
        switch (status.ToLower())
        {
            case "approved":
                return "text-success"; // dark green
            case "waiting":
                return "text-primary"; // primary color
            case "rejected":
                return "text-danger"; // red
            default:
                return "text-secondary"; // default color
        }
    };
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="title">
                <h2>All Complaints</h2>
            </div>

            <div class="card card-plain">
                <div class="card-body">
                    <form method="get" action="@Url.Action("Admin")" class="mb-4">
                        <div class="form-group">
                            <label for="searchSubject" class="form-label">Search by Subject</label>
                            <input type="text" id="searchSubject" name="searchSubject" value="@ViewContext.HttpContext.Request.Query["searchSubject"]" class="form-control" placeholder="Subject">
                        </div>
                        <div class="form-group">
                            <label for="searchStatus" class="form-label">Search by Status</label>
                            <div>
                                <input type="radio" id="statusNull" name="searchStatus" value="" @(string.IsNullOrEmpty(ViewContext.HttpContext.Request.Query["searchStatus"]) ? "checked" : "")>
                                <label for="statusNull">All</label>
                            </div>
                            <div>
                                <input type="radio" id="statusWaiting" name="searchStatus" value="waiting" @(ViewContext.HttpContext.Request.Query["searchStatus"] == "waiting" ? "checked" : "")>
                                <label for="statusWaiting">Waiting</label>
                            </div>
                            <div>
                                <input type="radio" id="statusRejected" name="searchStatus" value="rejected" @(ViewContext.HttpContext.Request.Query["searchStatus"] == "rejected" ? "checked" : "")>
                                <label for="statusRejected">Rejected</label>
                            </div>
                            <div>
                                <input type="radio" id="statusApproved" name="searchStatus" value="approved" @(ViewContext.HttpContext.Request.Query["searchStatus"] == "approved" ? "checked" : "")>
                                <label for="statusApproved">Approved</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="searchUserEmail" class="form-label">Search by User Email</label>
                            <input type="text" id="searchUserEmail" name="searchUserEmail" value="@ViewContext.HttpContext.Request.Query["searchUserEmail"]" class="form-control" placeholder="User Email">
                        </div>
                        <button type="submit" class="btn btn-primary">Search</button>
                    </form>

                    <div class="row">
                        <div class="col-md-12">
                            @foreach (var item in Model)
                            {
                                   <div class=" card card-pricing col-lg-12 col-md-12 mb-4">
                                 <div class="card card-blog card-plain mb-3">
                                    <div class="card-image text-center">
                                        <a href="@Url.Action("EditComplaint", "Complaints", new { id = item.Id })">
                                            <img class="img-fluid rounded img-raised" style="width: 30%; height: auto;" src="https://localhost:7166/api/Complaints/image/@item.Attachment" alt="Complaint Image">
                                        </a>
                                    </div>
                                    <div class="card-body">
                                        <h6 class="category @GetStatusClass(item.ComplaintState)">@item.ComplaintState</h6>
                                        <h5 class="card-title">
                                            <a href="@Url.Action("EditComplaint", "Complaints", new { id = item.Id })">@item.ComplaintsSubject</a>
                                        </h5>
                                        <p class="card-description">
                                            @item.Description
                                        </p>
                                        <div class="card-footer">
                                            <div class="author">
                                                @* <img src="~/assets/img/user-placeholder.png" alt="User Avatar" class="avatar img-raised"> *@
                                                <span>@item.UserName (@item.UserEmail)</span>
                                            </div>
                                            <div class="stats stats-right">
                                                <a href="@Url.Action("EditComplaint", "Complaints", new { id = item.Id })" class="btn btn-primary btn-sm">Edit</a>
                                                <form asp-action="Delete" asp-controller="Complaints" method="post" onsubmit="return confirm('Are you sure you want to delete this?');" style="display:inline;">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@item.Id" />
                                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        </div>
                            }
                        </div>
                    </div>

                    <!-- Pagination controls -->
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @if (ViewBag.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(ViewBag.PageNumber - 1)" asp-route-pageSize="@ViewBag.PageSize">Previous</a>
                                </li>
                            }
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(ViewBag.PageNumber == i ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@ViewBag.PageSize">@i</a>
                                </li>
                            }
                            @if (ViewBag.PageNumber < ViewBag.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(ViewBag.PageNumber + 1)" asp-route-pageSize="@ViewBag.PageSize">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
