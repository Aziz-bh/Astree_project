@model ClientAstree.Models.DashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";

    var deviceCategories = Model.DeviceCategories.Distinct().ToList();
    var deviceCounts = deviceCategories.Select(dc => Model.DeviceCategories.Count(d => d == dc)).ToList();
}

<style>


    .bg-image {
        background-image: url('/img/fam1.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        min-height: 100vh;
    }

    .content-container {
        background-color: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin: 20px auto;
    }

    .card {
        margin-bottom: 20px;
        background-color: #1E3A7A;
        color: white;
        border: none;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .card-title {
        font-family: 'Roboto', sans-serif;
        font-size: 1.5rem;
        color: #FFFF;
    }

    .card-text {
        font-size: 1rem;
        color: white;
    }

    .card-img-top {
        width: 100px;
        height: auto;
        display: block;
        margin-left: auto;
        margin-right: auto;
        padding-top: 10px;
    }

    .card-body {
        text-align: center;
    }

    .btn-primary {
        background-color: #FFFF;
        color: #1E3A7A;
        border: none;
    }

    .btn-primary:hover {
        background-color: #4E6B8B;
        color: #1E3A7A;
    }

    .chart-container {
        margin: 20px 0;
    }

    .table-container {
        margin-top: 20px;
    }
</style>

<div class="container-fluid bg-image">
    <div class="row">
        <div class="col-lg-2 col-md-3 col-sm-4 py-0 my-0 px-0 mx-0">
            @Html.Partial("_SideMenu")
        </div>

        <div class="col-lg-10 col-md-9 col-sm-8">
            <div class="content-container">
                <div class="row">

                    @* Summary Cards *@
                    @foreach (var card in new[] { 
                        new { Title = "Automobile Contracts", Count = Model.AutomobileContractsCount, Url = "/AutomobileContract/Index", Image = "/img/dashboard/cardash.png" },
                        new { Title = "Property Contracts", Count = Model.PropertyContractsCount, Url = "/PropertyContract/Index", Image = "/img/dashboard/houseDash.png" },
                        new { Title = "Users", Count = Model.UsersCount, Url = "/User", Image = "/img/dashboard/userDash.png" },
                        new { Title = "Complaints", Count = Model.ComplaintsCount, Url = "/Complaints/Index", Image = "/img/dashboard/complaintDash.png" } 
                    })
                    {
                        <div class="col-md-3">
                            <div class="card" style="width: 100%;">
                                <img class="card-img-top" src="@card.Image" alt="@card.Title Logo">
                                <div class="card-body">
                                    <h4 class="card-title">@card.Title</h4>
                                    <p class="card-text">@card.Count @card.Title.ToLower().Replace(" contracts", "")</p>
                                    <a href="@card.Url" class="btn btn-primary">View @card.Title</a>
                                </div>
                            </div>
                        </div>
                    }

               @* New Bar Chart: Page Views vs. Users *@
                    <div class="col-md-12 chart-container">
                        <h5>Page Views vs. Users by Page</h5>
                        <canvas id="pageViewsUsersBarChart"></canvas>
                    </div>
                    @* Line Charts *@
                    <div class="col-md-6 chart-container">
                        <h5>Page Views and Users Over Time</h5>
                        <canvas id="lineChart1"></canvas>
                    </div>
                    <div class="col-md-6 chart-container">
                        <h5>Sessions, Bounce Rate, and Engagement Rate Over Time</h5>
                        <canvas id="lineChart2"></canvas>
                    </div>

                    @* Bar Chart *@
                    <div class="col-md-6 chart-container">
                        <h5>Regions and Number of Users/Sessions</h5>
                        <canvas id="barChart"></canvas>
                    </div>

                    @* Geo Maps *@
                    <div class="col-md-6 chart-container">
                        <h5>Geographical Distribution of Sessions</h5>
                        <div id="geoChart" style="width: 100%; height: 500px;"></div>
                    </div>

     

                    @* Pie Chart *@
                    <div class="col-md-6 chart-container" style="height: 400px;">
                        <h5>Device Categories</h5>
                        <canvas id="pieChart"></canvas>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
    <footer class="footer footer-big" data-background-color="black">
            <div class="container">
              <div class="content">
                <div class="row">
                  <div class="col-md-4">
           
                    <div class="social-feed">
                                            <div class="feed-line">
                        <img src="/img/logo-white.png" alt="">
                      </div>
                               <br>
                      <div class="feed-line">
                    
                        <p>Vous voulez fractionner le paiement de votre prime d’assurance Auto chez ASTREE sur une année et sans intérêts ?
Oui c’est possible...</p>
                      </div>
                      <div class="feed-line">
                     
<p>En savoir plus</p>                      </div>

                    </div>
                  </div>
                  <div class="col-md-2">
                    <h5>Côté Pratique</h5>
                    <ul class="links-vertical">
                      <li>
                        <a href="https://www.astree.com.tn/taches-courantes/remplir-un-constat/" class="text-muted">
                          Remplir un constat ?
                        </a>
                      </li>
                      <li>
                        <a href="https://www.astree.com.tn/taches-courantes/foires-aux-questions/" class="text-muted">
                          Foires aux Questions 
                        </a>
                      </li>
                      <li>
                        <a href="https://www.astree.com.tn/taches-courantes/glossaire/" class="text-muted">
                          Glossaire
                        </a>
                      </li>
                      <li>
                        <a href="https://www.astree.com.tn/taches-courantes/liens-utiles/" class="text-muted">
                          Liens utiles
                        </a>
                      </li>
                    </ul>
                  </div>
                  <div class="col-md-2">
                    <h5>Siège Social</h5>
                    <ul class="links-vertical">
                      <li>
                        <a href="#pablo" class="text-muted">
                          45, Avenue Kheireddine Pacha,
B.P. 780 TUNIS Cedex
                        </a>
                      </li>
                      <li>
                        <a href="#pablo" class="text-muted">
                         (+216) 71 90 42 11
                        </a>
                      </li>
                      <li>
                        <a href="#pablo" class="text-muted">
                          courrier@astree.com.tn
                        </a>
                      </li>
                    </ul>
                  </div>

                  <div class="col-md-4">
                    <h5>Follow Us</h5>
                    <ul class="social-buttons">
                      <li>
                        <a href="#pablo" class="btn btn-icon btn-neutral btn-twitter btn-round">
                          <i class="fab fa-twitter"></i>
                        </a>
                      </li>
                      <li>
                        <a href="#pablo" class="btn btn-icon btn-neutral btn-facebook btn-round">
                          <i class="fab fa-facebook-square"></i>
                        </a>
                      </li>
                      <li>
                        <a href="#pablo" class="btn btn-icon btn-neutral btn-dribbble btn-round">
                          <i class="fab fa-dribbble"></i>
                        </a>
                      </li>
                      <li>
                        <a href="#pablo" class="btn btn-icon btn-neutral btn-google btn-round">
                          <i class="fab fa-google-plus"></i>
                        </a>
                      </li>
                      <li>
                        <a href="#pablo" class="btn btn-icon btn-neutral btn-instagram btn-round">
                          <i class="fab fa-instagram"></i>
                        </a>
                      </li>
                    </ul>
                    <h5>
                      <small>Numbers Don't Lie</small>
                    </h5>
                    <h5>14.521
                      <small class="text-muted">Freelancers</small>
                    </h5>
                    <h5>1.423.183
                      <small class="text-muted">Transactions</small>
                    </h5>
                  </div>
                </div>
              </div>
              <hr>
              <div class="copyright">
                Copyright ©
                <script>
                  document.write(new Date().getFullYear())
                </script>2024 Creative Tim All Rights Reserved.
              </div>
            </div>
          </footer>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js"></script>
<script src="https://www.gstatic.com/charts/loader.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Line Chart 1: Page Views + Users / Date
        var lineChart1Ctx = document.getElementById('lineChart1').getContext('2d');
        var lineChart1 = new Chart(lineChart1Ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Dates.Select(date => DateTime.ParseExact(date, "yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy/MM/dd")))),
                datasets: [
                    {
                        label: 'Page Views',
                        data: @Html.Raw(Json.Serialize(Model.ScreenPageViews)),
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1,
                        fill: false
                    },
                    {
                        label: 'Users',
                        data: @Html.Raw(Json.Serialize(Model.TotalUsers)),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: false
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) { return Number.isInteger(value) ? value : null; },
                            stepSize: 1
                        }
                    }
                }
            }
        });

        // Line Chart 2: Sessions + Bounce Rate + Engagement Rate / Date
        var lineChart2Ctx = document.getElementById('lineChart2').getContext('2d');
        var lineChart2 = new Chart(lineChart2Ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Dates.Select(date => DateTime.ParseExact(date, "yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy/MM/dd")))),
                datasets: [
                    {
                        label: 'Sessions',
                        data: @Html.Raw(Json.Serialize(Model.Sessions)),
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                        fill: false
                    },
                    {
                        label: 'Bounce Rate',
                        data: @Html.Raw(Json.Serialize(Model.BounceRates)),
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                        fill: false
                    },
                    {
                        label: 'Engagement Rate',
                        data: @Html.Raw(Json.Serialize(Model.EngagementRates)),
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: 'rgba(255, 159, 64, 1)',
                        borderWidth: 1,
                        fill: false
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) { return Number.isInteger(value) ? value : null; },
                            stepSize: 1
                        }
                    }
                }
            }
        });

        // Bar Chart: Regions and Number of Users/Sessions
        var barChartCtx = document.getElementById('barChart').getContext('2d');
        var barChart = new Chart(barChartCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Regions.Distinct())),
                datasets: [{
                    label: 'Number of Users/Sessions',
                    data: @Html.Raw(Json.Serialize(Model.Regions.Distinct().Select(region => Model.Regions.Count(r => r == region)))),
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) { return Number.isInteger(value) ? value : null; },
                            stepSize: 1
                        }
                    }
                }
            }
        });

        // Geo Map
        google.charts.load('current', {'packages':['geochart']});
        google.charts.setOnLoadCallback(drawGeoChart);
        function drawGeoChart() {
            var data = google.visualization.arrayToDataTable([
                ['Country', 'Sessions'],
                @foreach (var country in Model.Countries.Distinct())
                {
                    <text>['@country', @Model.Countries.Count(c => c == country)],</text>
                }
            ]);

            console.log(data.toJSON()); // Debug statement to verify the data being passed

            var options = {
                region: 'world',
                displayMode: 'regions',
                colorAxis: {colors: ['#e0f7fa', '#006064']}
            };

            var chart = new google.visualization.GeoChart(document.getElementById('geoChart'));
            chart.draw(data, options);
        }

        // New Bar Chart: Page Views vs. Users by Page
        var pageViewsUsersBarChartCtx = document.getElementById('pageViewsUsersBarChart').getContext('2d');
        var pageViewsUsersBarChart = new Chart(pageViewsUsersBarChartCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.PagePaths)),
                datasets: [
                    {
                        label: 'Page Views',
                        data: @Html.Raw(Json.Serialize(Model.ScreenPageViews)),
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Users',
                        data: @Html.Raw(Json.Serialize(Model.TotalUsers)),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        beginAtZero: true
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) { return Number.isInteger(value) ? value : null; },
                            stepSize: 1
                        }
                    }
                }
            }
        });

        // Pie Chart: Device Categories
        var pieChartCtx = document.getElementById('pieChart').getContext('2d');
        var pieChart = new Chart(pieChartCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(deviceCategories)),
                datasets: [{
                    label: 'Device Categories',
                    data: @Html.Raw(Json.Serialize(deviceCounts)),
                    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(255, 206, 86, 0.2)'],
                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    });
</script>
