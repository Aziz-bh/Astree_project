@model ClientAstree.Models.UserDetailsViewModel

@{
    ViewData["Title"] = "User Details";
}

<style>
    .bg-image {
        background-image: url('/img/fam1.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        min-height: 100vh; /* Ensures it covers the full height of the viewport */
    }

    .content-container {
        background-color: rgba(255, 255, 255, 0.8); /* Light gray for the content container */
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin: 20px auto;
    }

    .section-header {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
    }

    .section-header i {
        margin-right: 10px;
    }

    .card {
        margin-bottom: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1rem;
    }

    .card-img-top {
        width: 100px;
        height: auto;
        display: block;
        margin-left: auto;
        margin-right: auto;
        padding-top: 10px;
    }

    .card-body {
        text-align: center;
    }

    .breadcrumb {
        background-color: transparent;
    }

    .pagination-container {
        background-color: rgba(255, 255, 255, 0.8);
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .pagination .page-item.active .page-link {
        background-color: #4e6b8b; /* Use your primary color */
        border-color: #4e6b8b;
    }

    .btn-primary {
        background-color: #1E3A7A;
        border-color: #1E3A7A;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

    .btn-primary:hover {
        filter: brightness(95%);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    }

    .text-center {
        text-align: center;
    }

    .text-danger {
        color: #dc3545; /* Bootstrap red */
    }
</style>

<div class="container-fluid bg-image">
    <div class="row">
        <!-- Side Menu on the left -->
        <div class="col-lg-2 col-md-3 col-sm-4 py-0 my-0 px-0 mx-0">
            @Html.Partial("_SideMenu")
        </div>

        <!-- Main Content Area -->
        <div class="col-lg-10 col-md-9 col-sm-8">
            <div class="content-container">
                <div class="title">
                    <nav aria-label="breadcrumb" role="navigation">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">Admin</li>
                            <li class="breadcrumb-item" aria-current="page">Users</li>
                            <li class="breadcrumb-item active" aria-current="page">User Details</li>
                        </ol>
                    </nav>
                </div>
                <div class="section-header">
                    <i class="fas fa-user"></i>
                    <h4>User Information</h4>
                </div>
                <hr />
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }
                <dl class="row">
                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.Id)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.Id)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.Email)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.Email)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.FirstName)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.FirstName)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.LastName)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.LastName)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.PhoneNumber)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.PhoneNumber)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.Roles)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.Roles)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.CIN)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.CIN)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.BirthDate)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.BirthDate)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.Nationality)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.Nationality)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.Gender)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.Gender)</dd>

                    <dt class="col-sm-2">@Html.DisplayNameFor(model => model.User.Civility)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.User.Civility)</dd>
                </dl>

                <div>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.User.Id }, new { @class = "btn btn-info" }) |
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>

                <!-- Add Role Editing Section -->
                <div class="section-header">
                    <i class="fas fa-user-shield"></i>
                    <h4>Change User Role</h4>
                </div>
                <form asp-action="EditRoles" method="post">
                    <input type="hidden" name="id" value="@Model.User.Id" />
                    <input type="hidden" name="userName" value="@Model.User.Email" />
                    <div class="form-group">
                        <label for="role">Select Role</label>
                        <select class="form-control" id="role" name="role">
                            <option value="Admin">Admin</option>
                            <option value="Member">Member</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Change Role</button>
                </form>

                <div class="section-header">
                    <i class="fas fa-car"></i>
                    <h4>Automobile Contracts</h4>
                </div>
                @if (Model.AutomobileContracts.Any())
                {
                    <div class="form-group">
                        <input type="text" class="form-control" id="searchInputAuto" placeholder="Search Automobiles">
                    </div>
                    <div class="row" id="automobileCards">
                        @foreach (var auto in Model.AutomobileContracts)
                        {
                            <div class="col-md-4 automobile-card" 
                                 data-startdate="@auto.StartDate.ToString("yyyy-MM-dd")"
                                 data-enddate="@auto.EndDate.ToString("yyyy-MM-dd")">
                                <div class="card" style="width: 20rem;">
                                    <img class="card-img-top" src="@(auto.VehicleType == "Business" ? "/img/contract/auto/businessCar.png" : "/img/contract/auto/personalCar.png")" alt="Vehicle Image">
                                    <div class="card-body">
                                        <h4 class="card-title">@auto.VehicleMake @auto.Model</h4>
                                        <p class="card-text">
                                            Type: @auto.VehicleType <br>
                                            Start Date: @auto.StartDate.ToString("yyyy-MM-dd") <br>
                                            End Date: @auto.EndDate.ToString("yyyy-MM-dd") <br>
                                            Quota: @auto.Quota<br>
                                            Guarantees: @foreach (var guarantee in auto.GuaranteesList)
                                            {
                                                <span class="badge badge-success">@guarantee</span>
                                            }
                                        </p>
                                        <a href="/AutomobileContract/ContractDetails/@auto.Id" class="btn btn-primary">View Details</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <nav aria-label="Automobiles Page navigation">
                        <ul class="pagination" id="autoPagination"></ul>
                    </nav>
                }
                else
                {
                    <p>No contracts available.</p>
                }

                <div class="section-header">
                    <i class="fas fa-home"></i>
                    <h4>Property Contracts</h4>
                </div>
                @if (Model.PropertyContracts.Any())
                {
                    <div class="form-group">
                        <input type="text" class="form-control" id="searchInputProp" placeholder="Search Properties">
                    </div>
                    <div class="row" id="propertyCards">
                        @foreach (var prop in Model.PropertyContracts)
                        {
                            <div class="col-md-4 property-card" 
                                 data-startdate="@prop.StartDate.ToString("yyyy-MM-dd")"
                                 data-enddate="@prop.EndDate.ToString("yyyy-MM-dd")">
                                <div class="card" style="width: 20rem;">
                                    <img class="card-img-top" src="@(prop.Type == "Commercial" ? "/img/contract/property/house.png" : "/img/contract/property/house.png")" alt="Property Image">
                                    <div class="card-body">
                                        <h4 class="card-title">@prop.Location</h4>
                                        <p class="card-text">
                                            Type: @prop.Type <br>
                                            Start Date: @prop.StartDate.ToString("yyyy-MM-dd") <br>
                                            End Date: @prop.EndDate.ToString("yyyy-MM-dd") <br>
                                            Value: @prop.PropertyValue <br>
                                            Coverages: @String.Join(", ", prop.CoveragesList)
                                        </p>
                                        <a href="/PropertyContract/Details/@prop.Id" class="btn btn-primary">View Details</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <nav aria-label="Properties Page navigation">
                        <ul class="pagination" id="propPagination"></ul>
                    </nav>
                }
                else
                {
                    <p>No property contracts available.</p>
                }
            </div>
        </div>
    </div>
</div>

<!-- Load jQuery first -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
document.addEventListener("DOMContentLoaded", function() {
    function paginate(items, paginationId, itemsPerPage) {
        let numItems = items.length;
        let numPages = Math.ceil(numItems / itemsPerPage);

        items.hide().slice(0, itemsPerPage).show();

        let pagination = $('#' + paginationId);
        pagination.empty(); // Clear existing pagination before new setup

        if(numPages > 1) { // Only create pagination if needed
            let ul = $('<ul class="pagination"></ul>');
            pagination.append(ul);

            for (let i = 0; i < numPages; i++) {
                let pageNum = i + 1;
                let pageItem = $('<li class="page-item"><a class="page-link" href="#">' + pageNum + '</a></li>');
                pageItem.on('click', function(e) {
                    e.preventDefault();
                    items.hide();
                    let start = pageNum * itemsPerPage - itemsPerPage;
                    let end = start + itemsPerPage;
                    items.slice(start, end).show();
                    $('.page-item').removeClass('active');
                    $(this).addClass('active');
                });
                ul.append(pageItem);
            }
            $('.page-item:first-of-type').addClass('active');
        }
    }

    function setupSearchAndPagination(searchInputSelector, itemsSelector, paginationId, itemsPerPage) {
        let items = $(itemsSelector);
        paginate(items, paginationId, itemsPerPage); // Initial pagination setup

        $(searchInputSelector).on('keyup', function() {
            let searchTerm = $(this).val().toLowerCase();
            items = $(itemsSelector).filter(function() {
                return $(this).text().toLowerCase().indexOf(searchTerm) > -1;
            });

            items.show();
            $(itemsSelector).not(items).hide(); // Hide non-matching items
            paginate(items, paginationId, itemsPerPage); // Repaginate based on search results
        });
    }

    // Initialize search and pagination for both automobile and property cards
    setupSearchAndPagination('#searchInputAuto', '.automobile-card', 'autoPagination', 3);
    setupSearchAndPagination('#searchInputProp', '.property-card', 'propPagination', 3);
});
</script>